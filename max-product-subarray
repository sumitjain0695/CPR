class Solution:

    # Function to find maximum
    # product subarray
    def maxProduct(self,arr, n):
        # code here
        """Now there are 3 cases:
if arr[i] > 0, then MAXI is MAXI*arr[i], and MINI is min(MIN*arr[i], 1)
if arr[i] == 0, then we need to see for another subarray, and make MAXI = MINI = 1
if arr[i]<0, then MAXI becomes max(MINI*arr[i],1) and MINI becomes MAXI* arr[i]"""

        """maxi = mini = 1
        final_max = 0
        for i in arr:
            if i>0:
                maxi *= i
                mini = min(mini*i, 1)
            elif i == 0:
                maxi = mini = 1
            else:
                maxi = max(mini*i, maxi)
                mini = maxi * i
                
            if maxi > final_max:
                final_max = maxi"""
                
        ans = -99999999999999999
        max_backward = 1
        max_forward = 1
        for i in range(n):
            max_forward = max_forward * arr[i] if arr[i] != 0 else 1
            max_backward = max_backward * arr[n-i-1] if arr[n-i-1] != 0 else 1
            ans = max(ans, max(max_backward, max_forward))
        if n == 1 and arr[0] == 0:
           return 0
            
                
        return ans
                
                
#{ 
#  Driver Code Starts
#Initial Template for Python 3



if __name__ == '__main__':
    tc = int(input())
    while tc > 0:
        n = int(input())
        arr = list(map(int, input().strip().split()))
        ob = Solution()
        ans = ob.maxProduct(arr, n)
        print(ans)
        tc -= 1

# } Driver Code Ends
